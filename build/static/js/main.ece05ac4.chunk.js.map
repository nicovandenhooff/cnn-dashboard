{"version":3,"sources":["components/layout/navbar/NavBar.js","components/layout/body/Body.js","theme.js","context/ThemeContext.js","hooks/useDarkMode.js","components/layout/panel/Panel.js","components/layout/modal/Modal.js","hooks/useClickOutside.js","components/form/Form.js","components/image-viewer/ImageViewer.js","components/themeToggle/ThemeToggle.js","global.js","App.js","hooks/useModal.js","index.js"],"names":["pages","NavBar","_useState","useState","_useState2","Object","slicedToArray","anchorElNav","setAnchorElNav","handleCloseNavMenu","react_default","a","createElement","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","sx","mr","display","xs","md","Box","flexGrow","IconButton","size","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Menu_default","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","key","react_router_dom","to","textAlign","justifyContent","Button","my","Body","_ref","children","flexDirection","paddingTop","baseTheme","createTheme","typography","fontFamily","join","darkThemeMui","objectSpread","palette","type","primary","main","secondary","lightThemeMui","lightTheme","body","text","backgroundColor","darkTheme","background","ThemeContext","createContext","ThemeProvider","_useDarkMode","theme","setTheme","_useState3","_useState4","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","useDarkMode","_useDarkMode2","toggleTheme","Provider","value","styled_components_browser_esm","ThemeProvider_ThemeProvider","Panel","className","useContext","concat","Modal","isShowing","toggle","ref","useRef","handler","listener","current","contains","target","document","addEventListener","removeEventListener","useOnClickOutside","Fragment","ReactDOM","createPortal","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","Form","handleSubmit","setImage","setNetwork","setTransferLearning","FormControl","label","name","accept","onChange","RadioGroup","aria-labelledby","defaultValue","e","FormControlLabel","control","Radio","ImageViewer","src","alt","ThemeToggle","_useContext","style","marginTop","Switch","checked","GlobalStyles","createGlobalStyle","_templateObject","taggedTemplateLiteral","_ref2","App","image","imageURL","setImageURL","_useState5","_useState6","network","_useState7","_useState8","transferLearning","_useState9","myFile","_useState10","postImage","setPostImage","_useState11","_useState12","predictions","setPredictions","_useModal","showModal","setIsShowing","useModal","imageUrl","URL","createObjectURL","createPost","asyncToGenerator","regenerator_default","mark","_callee","post","wrap","_context","prev","next","newImage","axios","then","res","data","t0","console","log","message","stop","_x","apply","this","arguments","convertToBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","handleFileUpload","_callee2","base64","_context2","files","sent","_x2","NavBar_NavBar","Modal_Modal","ThemeToggle_ThemeToggle","Body_Body","Panel_Panel","Form_Form","preventDefault","ImageViewer_ImageViewer","keys","i","render","StrictMode","ThemeContext_ThemeProvider","src_App","getElementById"],"mappings":"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","file":"static/js/main.ece05ac4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Link } from \"react-router-dom\";\n\nconst pages = ['Dashboard', 'About', 'Contact'];\n\nexport const NavBar = () => {\n    const [anchorElNav, setAnchorElNav] = useState(null);\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget)\n    }\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null)\n    }\n\n    return (\n        <AppBar position=\"static\">\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n                    >\n                        Indoor Image Detection\n                    </Typography>\n\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                        <IconButton\n                            size=\"large\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={handleCloseNavMenu}\n                            sx={{\n                                display: { xs: 'block', md: 'none' },\n                            }}\n                        >\n                            {pages.map((page) => (\n                                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                                    <Link to=\"/\" >\n                                        <Typography textAlign=\"center\" >{page}</Typography>\n                                    </Link>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </Box>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n                    >\n                        Indoor Image Detection\n                    </Typography>\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex', justifyContent: 'flex-end' } }}>\n                        {pages.map((page) => (\n                            <Button\n                                key={page}\n                                onClick={handleCloseNavMenu}\n                                sx={{ my: 2, color: 'white', display: 'block' }}\n                            >\n                                {page}\n                            </Button>\n                        ))}\n                    </Box>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\n","import React from 'react'\nimport Container from '@mui/material/Container';\n\nexport const Body = ({ children }) => {\n\n    return (\n        <Container\n            maxWidth=\"xl\"\n            sx={{\n                flexGrow: 1,\n                display: 'flex',\n                flexDirection: { xs: 'column', md: 'row' },\n                paddingTop: '40px'\n            }}>\n            {children}\n        </Container >\n    )\n\n}","import { createTheme } from '@mui/material/styles';\n\nexport const baseTheme = createTheme({\n    typography: {\n        fontFamily: ['\"Montserrat\"', 'Open Sans'].join(',')\n    }\n})\n\nexport const darkThemeMui = createTheme({\n    ...baseTheme,\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: \"#26a27b\"\n        },\n        secondary: {\n            main: \"#fafafa\"\n        },\n    }\n})\n\nexport const lightThemeMui = createTheme({\n    ...baseTheme,\n    palette: {\n        type: \"light\",\n        primary: {\n            main: \"#8499B1\"\n        },\n        secondary: {\n            main: \"#053C5E\"\n        }\n    }\n})\n\n\nexport const lightTheme = {\n    body: '#FFF',\n    text: 'black',\n    backgroundColor: '#26a27b',\n}\n\n\nexport const darkTheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n    background: '#999',\n}","import React, { createContext } from 'react'\n\nimport { ThemeProvider as GlobalThemeProvider } from 'styled-components';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport { lightThemeMui, darkThemeMui, lightTheme, darkTheme } from '../theme';\nimport { useDarkMode } from '../hooks';\n\n\nconst ThemeContext = createContext('light');\n\nconst ThemeProvider = ({ children }) => {\n\n    const [theme, toggleTheme, componentMounted] = useDarkMode()\n\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme, componentMounted }}>\n            <GlobalThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n                <MuiThemeProvider theme={theme === 'light' ? lightThemeMui : darkThemeMui}>\n                    {children}\n                </MuiThemeProvider>\n            </GlobalThemeProvider>\n        </ThemeContext.Provider >\n    )\n}\n\nexport { ThemeContext, ThemeProvider };","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode)\n    setTheme(mode)\n  }\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  }\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    if (localTheme) {\n      setTheme(localTheme);\n    } else {\n      setMode('light');\n    }\n    setComponentMounted(true);\n  }, [])\n\n  return [theme, toggleTheme, componentMounted]\n}","import React, { useContext } from 'react'\nimport { ThemeContext } from \"../../../context\"\n\n\nimport './Panel.css'\n\nexport const Panel = ({ children, className }) => {\n\n    const { theme } = useContext(ThemeContext)\n\n    return (\n\n        < div className={theme === 'light' ? `panel ${className}` : `panel panel-dark ${className}`} >\n            {children}\n        </div>\n    )\n\n}","import React, { useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.css'\n\nimport { useOnClickOutside } from '../../../hooks';\n\n\nexport const Modal = ({ isShowing, toggle }) => {\n    const ref = useRef()\n    useOnClickOutside(ref, () => toggle(false));\n\n    return (\n        <>\n            {isShowing ? ReactDOM.createPortal(\n                <React.Fragment >\n                    <div className=\"modal-overlay\" />\n                    <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\n                        <div ref={ref} className=\"modal\">\n                            <div className=\"modal-header\">\n                                <button\n                                    type=\"button\"\n                                    className=\"modal-close-button\"\n                                    data-dismiss=\"modal\"\n                                    aria-label=\"Close\"\n                                    onClick={() => { toggle(false) }}\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <p>\n                                Whoops! Looks like you've forgotten to upload a photo.\n                            </p>\n                        </div>\n                    </div>\n                </React.Fragment>, document.body\n            ) : null\n            }\n        </>\n    )\n}","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n    useEffect(\n        () => {\n            const listener = (event) => {\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n                handler(event);\n            };\n            document.addEventListener(\"mousedown\", listener);\n            document.addEventListener(\"touchstart\", listener);\n            return () => {\n                document.removeEventListener(\"mousedown\", listener);\n                document.removeEventListener(\"touchstart\", listener);\n            };\n        },\n\n        [ref, handler]\n    );\n}\n","import React from \"react\"\nimport ImageUploader from \"react-images-upload\";\n\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport \"./Form.css\"\n\nexport const Form = ({ handleSubmit, setImage, setNetwork, setTransferLearning }) => {\n\n    const handleNetworkChange = (e) => setNetwork(e.target.value)\n    const handleTransferLearningChange = (e) => setTransferLearning(e.target.value)\n\n    return (\n        <FormControl className=\"form\">\n            <input\n                type=\"file\"\n                label=\"Image\"\n                name=\"myFile\"\n                accept=\".jpeg, .png, .jpg\"\n                onChange={setImage}\n            />\n            {/* <ImageUploader\n                className=\"image-uploader\"\n                name=\"image\"\n                withIcon={true}\n                buttonText=\"Upload Image\"\n                buttonClassName=\"upload-button\"\n                onChange={setImage}\n                imgExtension={[\".jpg\", \".png\"]}\n                singleImage={true}\n                maxFileSize={5242880} /> */}\n            Select a network:\n            <RadioGroup\n                aria-labelledby=\"network-label\"\n                defaultValue=\"alexnet\"\n                name=\"network\"\n                onChange={handleNetworkChange}\n                className=\"radio-group\"\n            >\n                <FormControlLabel value=\"alexnet\" control={<Radio />} label=\"AlexNet\" />\n                <FormControlLabel value=\"densenet121\" control={<Radio />} label=\"DenseNet\" />\n                <FormControlLabel value=\"resnet18\" control={<Radio />} label=\"ResNet\" />\n                <FormControlLabel value=\"simple_cnn\" control={<Radio />} label=\"Simple Network\" />\n\n            </RadioGroup>\n            <RadioGroup\n                aria-labelledby=\"network-label\"\n                defaultValue=\"tuned\"\n                name=\"transferLearning\"\n                onChange={handleTransferLearningChange}\n                className=\"radio-group\"\n            >\n                <FormControlLabel value=\"tuned\" control={<Radio />} label=\"Fully tuned\" />\n                <FormControlLabel value=\"featex\" control={<Radio />} label=\"Last layer tuned\" />\n\n            </RadioGroup>\n            <Button variant=\"contained\" type=\"submit\" onClick={handleSubmit}>Submit</Button>\n\n        </FormControl>\n    )\n}\n","import React from 'react'\n\nimport './ImageViewer.css'\n\nexport const ImageViewer = ({ src }) => {\n\n    return (\n        <div>\n            <img src={src} className=\"image\" alt=\"upload\" />\n        </div>\n    )\n\n}","import React, { useContext } from 'react'\nimport { ThemeContext } from \"../../context\"\nimport Switch from '@mui/material/Switch';\n\nexport const ThemeToggle = () => {\n\n    const { theme, toggleTheme } = useContext(ThemeContext)\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 20 }}>\n            <Switch onChange={toggleTheme} checked={theme === \"light\" ? false : true} />\n        </div>\n    )\n\n}\n\n","\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    margin: 0;\n    padding: 0;\n    transition: all 0.3s ease-in;\n    font-family: 'Montserrat', cursive;\n  }`","import React, { useEffect, useState, useContext } from \"react\"\nimport { Body, Panel, NavBar, Modal } from \"./components/layout\";\nimport { Form } from \"./components/form/Form\";\nimport { ImageViewer } from \"./components/image-viewer/ImageViewer\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { ThemeToggle } from \"./components/themeToggle/ThemeToggle\";\n\nimport { ThemeContext } from \"./context\"\nimport { useModal } from './hooks';\nimport Container from '@mui/material/Container';\nimport axios from 'axios';\n\nimport { GlobalStyles } from './global';\n\nconst App = () => {\n  const [image, setImage] = useState()\n  const [imageURL, setImageURL] = useState('')\n  const [network, setNetwork] = useState('alexnet')\n  const [transferLearning, setTransferLearning] = useState('tuned')\n  const [postImage, setPostImage] = useState({\n    myFile: \"\",\n  });\n  const [predictions, setPredictions] = useState({})\n\n  const { theme } = useContext(ThemeContext)\n\n  const { showModal, toggle } = useModal();\n\n  useEffect(() => {\n    if (!image) return\n    const imageUrl = URL.createObjectURL(image)\n    setImageURL(imageUrl)\n  }, [image])\n\n\n  // const handleSubmit = (e) => {\n\n  //   if (!image || !network) {\n  //     return toggle(true)\n  //   }\n\n  //   console.log(image[0])\n  //   e.preventDefault()\n\n  //   axios.post('/predict', { data: image[0] })\n  //     .then(res => {\n  //       console.log(`response = ${res.data}`)\n  //       // setName(res.data)\n  //     })\n  //     .catch(error => {\n  //       console.log(`error = ${error}`)\n  //     })\n\n  //   // return fetch(\"/predict\", {\n  //   //   method: \"POST\",\n  //   //   headers: { \"Content-Type\": \"application/json\" },\n  //   //   body: JSON.stringify({ image }),\n  //   // })\n  //   //   .then((res) => res.json())\n  //   //   .then((data) => {\n  //   //     console.log('data', data)\n  //   //   })\n  // }\n\n  const createImage = (newImage) => axios.post('/predict', {\n    newImage, network, transferLearning\n  }).then((res) => {\n    setPredictions(res.data)\n  })\n\n  const createPost = async (post) => {\n    try {\n      await createImage(post);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createPost(postImage);\n  };\n\n  const convertToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n\n  const handleFileUpload = async (e) => {\n    console.log(e.target.files)\n    const file = e.target.files[0];\n    const base64 = await convertToBase64(file);\n    setPostImage(base64);\n    setImage(file)\n  };\n\n\n  return (\n    <>\n      <GlobalStyles />\n      <div className={theme === 'light' ? 'light theme' : 'dark theme'}>\n        <Router>\n          <NavBar />\n          {/* <Routes>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/contact\" component={Contact} />\n          </Routes> */}\n        </Router>\n        <Modal\n          isShowing={showModal}\n          toggle={toggle}\n        />\n        <Container\n          maxWidth=\"xl\"\n          sx={{\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: { md: 'column' },\n          }}>\n          <ThemeToggle />\n          <Body>\n            <Panel className=\"panel-form\">\n              <Form\n                handleSubmit={handleSubmit}\n                setImageURL={setImageURL}\n                setNetwork={setNetwork}\n                setImage={(e) => handleFileUpload(e)}\n                setTransferLearning={setTransferLearning}\n              />\n            </Panel>\n            <Panel>\n              {imageURL && <ImageViewer src={imageURL} />}\n            </Panel>\n            <Panel>\n              {\n                Object.keys(predictions).map((key, i) => (\n                  <p key={i}>\n                    <span>{key}</span>\n                    <span>: {predictions[key]}</span>\n                  </p>\n                ))\n              }\n            </Panel>\n          </Body>\n        </Container>\n      </div>\n    </>\n\n  )\n}\n\nexport default App\n","import { useState } from 'react';\n\nexport const useModal = () => {\n    const [showModal, setIsShowing] = useState(false);\n\n    const toggle = () => setIsShowing(!showModal)\n\n    return {\n        showModal,\n        toggle,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider >\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}